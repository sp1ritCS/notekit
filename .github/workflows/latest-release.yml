name: Nightly Build

on:
  push:
    branches:
      - master
      - ci

jobs:
  debian:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - name: Debian
            image: debian:latest
          - name: Ubuntu
            image: ubuntu:latest
    container: 
      image: ${{ matrix.container.image }}
      options: --privileged
    steps:
    - name: Symlink sh to bash ðŸ”—
      run: |
        unlink /bin/sh
        ln -s /bin/bash /bin/sh
    - name: Download dependencies ðŸ“¥
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get -y update
        apt-get -y install build-essential git zstd libfontconfig1-dev zlib1g-dev libjsoncpp-dev libgtksourceviewmm-3.0-dev libgtkmm-3.0-dev meson
    - uses: actions/checkout@v2
    - name: Build cLaTeXMath ðŸ–‹
      run: |
        git clone https://github.com/NanoMichael/cLaTexMath ~/cLaTeXMath/
        pushd ~/cLaTeXMath/
        meson _build
        ninja -C _build
        meson install -C _build
        popd
    - name: Configure ðŸ”§
      run: meson _build -DBUILD_REPRODUCIBLE=true
    - name: Compile ðŸŽ²
      run: ninja -C _build
    - name: Compress build ðŸ“¦
      run: |
        pushd _build
        tar -c * | zstd -o $GITHUB_WORKSPACE/notekit-${{ matrix.container.name }}.tar.zst
        popd
    - name: Upload nightly build ðŸ“¤
      uses: actions/upload-artifact@v2
      with:
        name: NoteKit - ${{ matrix.container.name }} nightly build
        path: notekit-${{ matrix.container.name }}.tar.zst
  suse:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - name: Tumbleweed
            image: registry.opensuse.org/home/sp1rit/images/images-tumbleweed/notekit-devel/tumbleweed:latest
          - name: Leap
            image: registry.opensuse.org/home/sp1rit/images/images-leap/notekit-devel/leap:latest
    container: 
      image: ${{ matrix.container.image }}
    steps:
    - uses: actions/checkout@v2
    - name: Configure ðŸ”§
      run: bash -c "$(rpm --eval '%meson -DBUILD_REPRODUCIBLE=true')"
    - name: Compile ðŸŽ²
      run: bash -c "$(rpm --eval '%meson_build')"
    - name: Compress build ðŸ“¦
      run: |
        pushd $(rpm --eval "%_vpath_builddir")
        tar -c * | zstd -o $GITHUB_WORKSPACE/notekit-${{ matrix.container.name }}.tar.zst
        popd
    - name: Upload nightly build ðŸ“¤
      uses: actions/upload-artifact@v2
      with:
        name: NoteKit - ${{ matrix.container.name }} nightly build
        path: notekit-${{ matrix.container.name }}.tar.zst
  arch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - name: Arch
            image: archlinux:base-devel
    container: 
      image: ${{ matrix.container.image }}
      options: --privileged
    steps:
    - name: Download dependencies ðŸ“¥
      run: |
        pacman -Sy --noconfirm
        pacman -S --noconfirm git gtkmm3 gtksourceviewmm jsoncpp zlib meson
    - uses: actions/checkout@v2
    - name: Build cLaTeXMath ðŸ–‹
      run: |
        git clone https://github.com/NanoMichael/cLaTexMath ~/cLaTeXMath/
        pushd ~/cLaTeXMath/
        arch-meson . _build
        ninja -C _build
        meson install -C _build --no-rebuild
        popd
    - name: Configure ðŸ”§
      run: arch-meson . _build -DBUILD_REPRODUCIBLE=true
    - name: Compile ðŸŽ²
      run: ninja -C _build
    - name: Compress build ðŸ“¦
      run: |
        pushd _build
        tar -c * | zstd -o $GITHUB_WORKSPACE/notekit-${{ matrix.container.name }}.tar.zst
        popd
    - name: Upload nightly build ðŸ“¤
      uses: actions/upload-artifact@v2
      with:
        name: NoteKit - ${{ matrix.container.name }} nightly build
        path: notekit-${{ matrix.container.name }}.tar.zst
